import React, { useState, useEffect } from "react";
import { Container, Table, Button, Modal, Alert, Card } from "react-bootstrap";
import API_BASE_URL from "../Context/API_BASE_URL";
import "./Dashboard.css";

const FarmerDashboard = () => {
  const [farmerData, setFarmerData] = useState(null);
  const [randomData, setRandomData] = useState(null);
  const [farmingTips, setFarmingTips] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [showTipsModal, setShowTipsModal] = useState(false);
  const farmerNumber = localStorage.getItem("farmerNumber");

  useEffect(() => {
    if (farmerNumber) {
      fetch(`${API_BASE_URL}/farmers/get/${farmerNumber}`)
        .then((res) => res.json())
        .then((data) => {
          if (data.success) {
            setFarmerData(data.data);
          }
        })
        .catch(() => setError("Failed to fetch farmer data"));
    }

    // тЬЕ Auto-refresh sensor data every 10 seconds
    generateRandomData(); // Initialize on first load
    const interval = setInterval(generateRandomData, 1000);
    return () => clearInterval(interval);
  }, [farmerNumber]);

  useEffect(() => {
    if (randomData) {
      setFarmingTips(generateFarmingTips(randomData)); // тЬЕ Update tips whenever sensor data updates
    }
  }, [randomData]);

  // тЬЕ Generate Random Sensor Data
  const generateRandomData = () => {
    const newData = {
      moisture: Math.floor(Math.random() * 80) + 20, // 20% - 100%
      pH: (Math.random() * 4 + 4).toFixed(1), // pH 4 - 8
      temperature: Math.floor(Math.random() * 20) + 20, // 20┬░C - 40┬░C
      humidity: Math.floor(Math.random() * 50) + 40, // 40% - 90%
    };
    setRandomData(newData);
  };

  const handlePayment = async () => {
    setLoading(true);
    setError(null);
    try {
      const response = await fetch(`${API_BASE_URL}/farmers/updatePaymentStatus/${farmerData._id}`, {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ paymentStatus: "Completed" }),
      });
      const data = await response.json();
      if (data.success) {
        setFarmerData((prev) => ({ ...prev, paymentStatus: "Completed" }));
      } else {
        setError(data.message);
      }
    } catch {
      setError("Payment update failed. Try again.");
    } finally {
      setLoading(false);
    }
  };

  // тЬЕ Generate Farming Tips
  // тЬЕ Generate Farming Tips (with Hindi & more variety)
const generateFarmingTips = (data) => {
  if (!data) return [];

  const { moisture, pH, temperature, humidity } = data;
  let tips = [];

  // ЁЯМК Moisture Tips
  if (moisture < 30) tips.push("ЁЯТз Increase irrigation, use drip irrigation for water conservation. (ЁЯТз рд╕рд┐рдВрдЪрд╛рдИ рдмрдврд╝рд╛рдПрдВ, рдЬрд▓ рд╕рдВрд░рдХреНрд╖рдг рдХреЗ рд▓рд┐рдП рдбреНрд░рд┐рдк рд╕рд┐рдВрдЪрд╛рдИ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред)");
  if (moisture > 70) tips.push("ЁЯМ▒ Reduce watering to avoid root rot and fungal diseases. (ЁЯМ▒ рдЬрдбрд╝ рд╕рдбрд╝рди рдФрд░ рдлрдВрдЧрд▓ рд░реЛрдЧреЛрдВ рд╕реЗ рдмрдЪрдиреЗ рдХреЗ рд▓рд┐рдП рдкрд╛рдиреА рдХрдо рдХрд░реЗрдВред)");
  if (moisture >= 30 && moisture <= 50) tips.push("ЁЯМ┐ Your soil moisture is balanced. Maintain irrigation as per crop needs. (ЁЯМ┐ рдЖрдкрдХреА рдорд┐рдЯреНрдЯреА рдХреА рдирдореА рд╕рдВрддреБрд▓рд┐рдд рд╣реИред рдлрд╕рд▓ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛рдУрдВ рдХреЗ рдЕрдиреБрд╕рд╛рд░ рд╕рд┐рдВрдЪрд╛рдИ рдмрдирд╛рдП рд░рдЦреЗрдВред)");

  // ЁЯзк Soil pH Tips
  if (pH < 5.5) tips.push("ЁЯФм Add lime to increase soil pH for better nutrient availability. (ЁЯФм рдкреЛрд╖рдХ рддрддреНрд╡реЛрдВ рдХреА рдЙрдкрд▓рдмреНрдзрддрд╛ рдмрдврд╝рд╛рдиреЗ рдХреЗ рд▓рд┐рдП рдорд┐рдЯреНрдЯреА рдореЗрдВ рдЪреВрдирд╛ рдорд┐рд▓рд╛рдПрдВред)");
  if (pH > 8) tips.push("ЁЯзк Use sulfur or organic compost to lower soil pH. (ЁЯзк рдорд┐рдЯреНрдЯреА рдХрд╛ рдкреАрдПрдЪ рдХрдо рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рд╕рд▓реНрдлрд░ рдпрд╛ рдЬреИрд╡рд┐рдХ рдЦрд╛рдж рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред)");
  if (pH >= 6 && pH <= 7.5) tips.push("тЬЕ Your soil pH is optimal for most crops. (тЬЕ рдЖрдкрдХреА рдорд┐рдЯреНрдЯреА рдХрд╛ pH рдЕрдзрд┐рдХрддрд░ рдлрд╕рд▓реЛрдВ рдХреЗ рд▓рд┐рдП рдЙрдкрдпреБрдХреНрдд рд╣реИред)");

  // тШАя╕П Temperature Tips
  if (temperature > 35) tips.push("тШАя╕П Use mulch or shade nets to protect crops from heat stress. (тШАя╕П рдЧрд░реНрдореА рд╕реЗ рдлрд╕рд▓реЛрдВ рдХреА рд░рдХреНрд╖рд╛ рдХреЗ рд▓рд┐рдП рдорд▓реНрдЪ рдпрд╛ рд╢реЗрдб рдиреЗрдЯреНрд╕ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред)");
  if (temperature < 20) tips.push("ЁЯФе Consider using greenhouse or plastic covers to retain heat. (ЁЯФе рдЧрд░реНрдореА рдмрдирд╛рдП рд░рдЦрдиреЗ рдХреЗ рд▓рд┐рдП рдЧреНрд░реАрдирд╣рд╛рдЙрд╕ рдпрд╛ рдкреНрд▓рд╛рд╕реНрдЯрд┐рдХ рдХрд╡рд░ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред)");

  // ЁЯТи Humidity Tips
  if (humidity > 80) tips.push("ЁЯМ╛ Ensure proper drainage to prevent mold and fungal infections. (ЁЯМ╛ рдлрдлреВрдВрдж рдФрд░ рдлрдВрдЧрд▓ рд╕рдВрдХреНрд░рдордг рдХреЛ рд░реЛрдХрдиреЗ рдХреЗ рд▓рд┐рдП рдЙрдЪрд┐рдд рдЬрд▓ рдирд┐рдХрд╛рд╕реА рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░реЗрдВред)");
  if (humidity < 50) tips.push("ЁЯТж Use misting or sprinkler irrigation to maintain humidity for crops. (ЁЯТж рдлрд╕рд▓реЛрдВ рдХреЗ рд▓рд┐рдП рдЖрд░реНрджреНрд░рддрд╛ рдмрдирд╛рдП рд░рдЦрдиреЗ рдХреЗ рд▓рд┐рдП рдорд┐рд╕реНрдЯрд┐рдВрдЧ рдпрд╛ рд╕реНрдкреНрд░рд┐рдВрдХрд▓рд░ рд╕рд┐рдВрдЪрд╛рдИ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред)");

  // ЁЯПб General Soil & Crop Tips
  tips.push("ЁЯМ┐ Add organic compost regularly to improve soil fertility. (ЁЯМ┐ рдорд┐рдЯреНрдЯреА рдХреА рдЙрд░реНрд╡рд░рддрд╛ рдмрдврд╝рд╛рдиреЗ рдХреЗ рд▓рд┐рдП рдирд┐рдпрдорд┐рдд рд░реВрдк рд╕реЗ рдЬреИрд╡рд┐рдХ рдЦрд╛рдж рдбрд╛рд▓реЗрдВред)");
  tips.push("ЁЯЪЬ Rotate crops to prevent soil nutrient depletion. (ЁЯЪЬ рдорд┐рдЯреНрдЯреА рдореЗрдВ рдкреЛрд╖рдХ рддрддреНрд╡реЛрдВ рдХреА рдХрдореА рд░реЛрдХрдиреЗ рдХреЗ рд▓рд┐рдП рдлрд╕рд▓ рдЪрдХреНрд░ рдЕрдкрдирд╛рдПрдВред)");
  tips.push("ЁЯжа Use biofertilizers to improve soil microbial activity. (ЁЯжа рдорд┐рдЯреНрдЯреА рдореЗрдВ рд╕реВрдХреНрд╖реНрдордЬреАрд╡реЛрдВ рдХреА рдЧрддрд┐рд╡рд┐рдзрд┐ рдмрдврд╝рд╛рдиреЗ рдХреЗ рд▓рд┐рдП рдЬреИрд╡рд┐рдХ рдЙрд░реНрд╡рд░рдХреЛрдВ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред)");
  tips.push("ЁЯзСтАНЁЯМ╛ Regularly test soil quality for balanced fertilizer application. (ЁЯзСтАНЁЯМ╛ рд╕рдВрддреБрд▓рд┐рдд рдЙрд░реНрд╡рд░рдХ рдЕрдиреБрдкреНрд░рдпреЛрдЧ рдХреЗ рд▓рд┐рдП рдирд┐рдпрдорд┐рдд рд░реВрдк рд╕реЗ рдорд┐рдЯреНрдЯреА рдХреА рдЧреБрдгрд╡рддреНрддрд╛ рдЬрд╛рдВрдЪреЗрдВред)");

  // тЬЕ Ensure at least 6 tips
  while (tips.length < 6) {
    tips.push("ЁЯМ▒ Maintain soil aeration by plowing at regular intervals. (ЁЯМ▒ рдирд┐рдпрдорд┐рдд рд░реВрдк рд╕реЗ рдЬреБрддрд╛рдИ рдХрд░рдХреЗ рдорд┐рдЯреНрдЯреА рдореЗрдВ рд╡рд╛рдпреБрд╕рдВрдЪрд╛рд░ рдмрдирд╛рдП рд░рдЦреЗрдВред)");
  }

  return tips;
};


  return (
    <Container className="farmer-dashboard-container">
      <h2 className="farmer-dashboard-title text-white">ЁЯЪЬ Farmer Dashboard</h2>
      {error && <Alert variant="danger">{error}</Alert>}

      {farmerData && farmerData.paymentStatus === "Pending" ? (
        <Card className="farmer-dashboard-card bg-warning text-dark">
          <h4>ЁЯФФ Subscription Ended</h4>
          <p>Please renew your subscription to access soil data and farming tips.</p>
          <Button variant="primary" onClick={handlePayment} disabled={loading}>
            {loading ? "Processing..." : "ЁЯТ│ Pay Now"}
          </Button>
        </Card>
      ) : (
        farmerData && (
          <>
            {/* тЬЕ Actual Soil Data Table */}
            <Card className="farmer-dashboard-card bg-secondary">
              <h4 className="text-light">ЁЯУК Soil Data</h4>
              <Table striped bordered hover className="bg-white text-dark">
                <thead>
                  <tr>
                    <th>Moisture</th>
                    <th>pH</th>
                    <th>Temperature</th>
                    <th>Humidity</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td>{farmerData.moisture}%</td>
                    <td>{farmerData.pH}</td>
                    <td>{farmerData.temperature}┬░C</td>
                    <td>{farmerData.humidity}%</td>
                  </tr>
                </tbody>
              </Table>
              <Button variant="success" onClick={() => setShowTipsModal(true)}>ЁЯУЬ View Farming Tips</Button>
            </Card>

            {/* тЬЕ Simulated Real-Time Sensor Data Table */}
            <Card className="farmer-dashboard-card bg-info mt-4">
              <h4 className="text-light">тП│ Real-Time Sensor Data</h4>
              <Table striped bordered hover className="bg-white text-dark">
                <thead>
                  <tr>
                    <th>Moisture</th>
                    <th>pH</th>
                    <th>Temperature</th>
                    <th>Humidity</th>
                  </tr>
                </thead>
                <tbody>
                  {randomData && (
                    <tr>
                      <td>{randomData.moisture}%</td>
                      <td>{randomData.pH}</td>
                      <td>{randomData.temperature}┬░C</td>
                      <td>{randomData.humidity}%</td>
                    </tr>
                  )}
                </tbody>
              </Table>
            </Card>
          </>
        )
      )}

      {/* тЬЕ Farming Tips Modal */}
      <Modal className="farmer-dashboard-modal" show={showTipsModal} onHide={() => setShowTipsModal(false)}>
        <Modal.Header closeButton>
          <Modal.Title>ЁЯМ╛ Farming Tips</Modal.Title>
        </Modal.Header>
        <Modal.Body>
          <ul>
            {farmingTips.length > 0 ? (
              farmingTips.map((tip, index) => <li key={index}>{tip}</li>)
            ) : (
              <li>тЬЕ Your soil conditions are optimal! (рдЖрдкрдХреА рдорд┐рдЯреНрдЯреА рдХреА рд╕реНрдерд┐рддрд┐ рдЙрддреНрддрдо рд╣реИ!)</li>
            )}
          </ul>
        </Modal.Body>
      </Modal>
    </Container>
  );
};

export default FarmerDashboard;
